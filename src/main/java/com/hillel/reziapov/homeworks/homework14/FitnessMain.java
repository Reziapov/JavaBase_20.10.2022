package com.hillel.reziapov.homeworks.homework14;

public class FitnessMain {

    public static void main(String[] args) {

        Fitness account1 = new Fitness("Elena", "Ivanova", 10, 3, 1950,
                "eivanova@gmail.com", 380991401010l, 85, "180/60", 7550);

        Fitness account2 = new Fitness("Alex", "Petrov", 25, 11, 1990,
                "apetrov@gmail.com", 380934523658l, 77.66, "180/60", 10200);

        Fitness account3 = new Fitness("Andrey", "Nechay", 13, 9, 1999,
                "anechay@gmail.com", 380937778523l, 65.2525, "180/60", 9500);

        Fitness account4 = new Fitness("Vladimir", "Sidorov", 30, 01, 1962,
                "vsidorov@gmail.com", 380675231419l, 81, "190/60", 5350);


        account1.printAccountInfo();
        account2.printAccountInfo();
        account3.printAccountInfo();
        account4.printAccountInfo();

    }


//    Зробіть програму для фітнес трекера, яка реєструватиме нового користувача створюючи йому обліковий запис,
//    приймаючи наступні параметри:
//    Незмінні (задаються тільки при створенні облікового запису, і можуть бути отримані лише за допомогою гетерів):
//    Ім'я
//    Дата народження (окремо день, місяць, рік)
//    Емейл
//    Телефон

//    Змінювані:
//    Прізвище
//    Вага
//    Тиск
//    Кількість пройдених за день кроків

//    Створювати кожного користувача необхідно через конструктор, беручи всі поля на вхід конструктора.
//    Додати метод printAccountInfo(), при виклику якого друкувати всі дані про користувача
//    Після прийому року народження - вираховувати вік користувача у внутрішню змінну age
//    (відштовхуючись просто від 2020 року, ускладнювати тут не будемо), на яку зробити тільки геттер і виводити на екран
//    разом з іншими полями в методі printAccountInfo(); у конструкторі або геттерах/сеттерах не використовуємо виведення в консоль.
//    У main-класі створити 3-5 користувачів та роздрукувати дані кожного через виклик методу printAccountInfo();
//    для двох користувачів змінити кілька полів та роздрукувати нові дані повторно


}
